# -*- coding: utf-8 -*-
"""ChatBot-Task1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jx9E5FKq8FT4OjMdjwHkOn9eG2qOX1Qa

#ChatBot With Rule-Based Responses

Build a simple chatbot that responds to user inputs based on
predefined rules. Use if-else statements or pattern matching
techniques to identify user queries and provide appropriate
responses. This will give you a basic understanding of natural
language processing and conversation flow.
"""

!pip install gtts

from gtts import gTTS
from IPython.display import Audio, display
from datetime import datetime
import os

def chatbot_response(user_input):
    # Convert user input to lowercase for case-insensitive matching
    user_input = user_input.lower()

    # Define rules for responses
    if 'hello' in user_input or 'hi' in user_input:
        response = "Hello! How can I help you today?"
    elif 'how are you' in user_input:
        response = "I'm just a chatbot, but I'm doing great! How about you?"
    elif 'what is your name' in user_input:
        response = "I am a simple chatbot created to assist you."
    elif 'bye' in user_input:
        response = "Goodbye! Have a great day!"
    elif 'weather' in user_input:
        response = "I'm not equipped to check the weather, but I hope it's nice outside!"
    elif 'time' in user_input:
        current_time = datetime.now().strftime("%H:%M:%S")
        response = f"The current time is {current_time}."
    elif 'joke' in user_input:
        response = "Why don't scientists trust atoms? Because they make up everything!"
    elif 'news' in user_input:
        response = "I can't provide news updates, but you can check the latest headlines on a news website."
    elif 'how can you help me' in user_input:
        response = "You can ask me about the time, weather, or just chat."
    else:
        response = "Sorry, I don't understand that question."

    # Convert the response to speech
    tts = gTTS(text=response, lang='en')
    audio_path = '/content/response.mp3'
    tts.save(audio_path)

    # Play the audio
    display(Audio(audio_path, autoplay=True))

    return response

def chat():
    print("Welcome to the chatbot! Type 'exit' to end the chat.")
    while True:
        user_input = input("You: ")
        if user_input.lower() == 'exit':
            print("Chatbot: Goodbye! Have a great day!")
            break
        response = chatbot_response(user_input)
        print("Chatbot:", response)

chat()